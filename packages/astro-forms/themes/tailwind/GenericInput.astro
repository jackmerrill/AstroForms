---
import { Theme, FormSchema } from "../../types";
import { GetInput } from ".";

const { schema, schemaKey, components, data } = Astro.props as {
    schema: FormSchema;
    schemaKey: string;
    components: Theme;
    data: Record<string, any>;
};

const Inputs = [];
const InputArgs = [];

if (!schema.properties) {
    if (schema.type !== 'array') {
        throw new Error("No properties found in schema");
    }

    if (!schema.items) {
        throw new Error("No items found in array schema");
    }

    Inputs.push(components.Array)
    InputArgs.push({
        schema: schema.items,
        schemaKey: schemaKey,
        components,
        data
    })
} else {
    Object.entries(schema.properties).forEach(([key, value]) => {
        let inputKey;

        if (schemaKey) {
            inputKey = `${schemaKey}.${key}`;
        } else {
            inputKey = key;
        }

        let FormInput;
        let FormArgs: Record<string, any> = { title: value.title, name: inputKey };

        FormInput = GetInput(value.type);
        FormArgs = {
            ...FormArgs,
            schema: value,
            schemaKey: key,
            items: value.items,
            components,
            subtitle: value.subtitle,
            data,
            value: data[inputKey]
        };

        Inputs.push(FormInput);

        InputArgs.push({
            key,
            value,
            ...FormArgs,
        });
    });

}

---

<div class:list={["space-y-2 grid", schemaKey && "px-2" ]}>
    <h1 class="font-semibold text-xl">{schema.title}</h1>
    {Inputs.map((Input, index) => <Input key={index} {...InputArgs[index]} />)}
</div>